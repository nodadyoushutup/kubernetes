# qbittorrent/base/configmap.yaml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cm
data:
  pvc-bound.sh: |
    #!/bin/sh
    set -e
    git clone https://github.com/nodadyoushutup/kubernetes.git /tmp/git
    ./tmp/git/script/pvc-bound.sh
  tarshot.sh: |
    #!/bin/sh
    set -e
    git clone https://github.com/nodadyoushutup/kubernetes.git /tmp/git
    ./tmp/git/script/tarshot.sh
  tarshot-copy.sh: |
    #!/bin/sh
    set -e
    git clone https://github.com/nodadyoushutup/kubernetes.git /tmp/git
    ./tmp/git/script/tarshot-copy.sh
  qBittorrent.conf: |
    [AutoRun]
    enabled=false
    program=

    [LegalNotice]
    Accepted=true

    [Preferences]
    Connection\UPnP=false
    Connection\PortRangeMin=6881
    Downloads\SavePath=/downloads/
    Downloads\ScanDirsV2=@Variant(\0\0\0\x1c\0\0\0\0)
    Downloads\TempPath=/downloads/incomplete/
    WebUI\Address=*
    WebUI\ServerDomains=*
    WebUI\HostHeaderValidation=false
  init-config.conf: | 
    #!/bin/sh
    set -e
    SOURCE_FILE="/script/qBittorrent.conf"
    DEST_FILE="/config/qBittorrent/qBittorrent.conf"

    # Check if the destination configuration file exists
    if [ ! -f "$DEST_FILE" ]; then
        echo "Configuration file not found at $DEST_FILE."
        echo "Copying default configuration from $SOURCE_FILE to $DEST_FILE."

        # Ensure the destination directory exists
        mkdir -p $(dirname "$DEST_FILE")

        # Copy the default configuration file to the destination
        cp "$SOURCE_FILE" "$DEST_FILE"

        echo "Default configuration copied."
    else
        echo "Configuration file already exists at $DEST_FILE. No action needed."
    fi