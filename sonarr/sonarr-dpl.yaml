# sonarr-dply.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr-dpl
  namespace: sonarr
  labels:
    k8s-app: sonarr
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      k8s-app: sonarr
  template:
    metadata:
      labels:
        k8s-app: sonarr
    spec:
      serviceAccountName: sonarr-sa
      initContainers:
      - name: init-pvc-bound
        image: bitnami/kubectl:latest
        command: ["sh", "/scripts/init-pvc-bound.sh"]
        volumeMounts:
          - name: script
            mountPath: /scripts
      containers:
      - name: sonarr
        image: linuxserver/sonarr:4.0.4
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8989
        env:
        - name: UMASK_SET
          value: "022"
        - name: TZ
          value: "America/New_York"
        - name: PUID
          value: "568"
        - name: PGID
          value: "568"
        volumeMounts:
        - name: config
          mountPath: /config
        - name: backup
          mountPath: /backup
        - name: media
          mountPath: /media
        readinessProbe:
          httpGet:
            path: /ping
            port: 8989
          initialDelaySeconds: 10
          periodSeconds: 10
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: sonarr-pvc
          readOnly: false
      - name: backup
        nfs:
          server: 192.168.0.100
          path: /mnt/epool/backup/sonarr
          readOnly: false
      - name: media
        nfs:
          server: 192.168.0.100
          path: /mnt/epool/media
          readOnly: false
      - name: script
        configMap:
          name: sonarr-cm
          defaultMode: 0755
